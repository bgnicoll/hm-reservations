// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Services;

#nullable disable

namespace Services.Migrations
{
    [DbContext(typeof(ReservationDbContext))]
    partial class ReservationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Services.Models.ApiKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.ToTable("ApiKeys");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedByUserId = 1,
                            Expiration = new DateTime(2026, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Key = "efe33b8d-9311-4858-8cb5-ab38dd97604b"
                        },
                        new
                        {
                            Id = 2,
                            CreatedByUserId = 2,
                            Expiration = new DateTime(2026, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Key = "2011ea9a-ae39-8be4-7656-f46f48d289ff"
                        },
                        new
                        {
                            Id = 3,
                            CreatedByUserId = 3,
                            Expiration = new DateTime(2023, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Key = "2dc26fe3-df8c-7ff7-7f12-c72f3973f651"
                        },
                        new
                        {
                            Id = 4,
                            CreatedByUserId = 4,
                            Expiration = new DateTime(2026, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Key = "e28e8a47-3938-1836-367a-1c4fd9f9997d"
                        },
                        new
                        {
                            Id = 5,
                            CreatedByUserId = 5,
                            Expiration = new DateTime(2026, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Key = "f5fe1945-97e2-f352-e7ff-43ff0dc78580"
                        },
                        new
                        {
                            Id = 6,
                            CreatedByUserId = 6,
                            Expiration = new DateTime(2026, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Key = "8948c70e-6805-e5d1-4b1c-c387cd8e3c7f"
                        });
                });

            modelBuilder.Entity("Services.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClientUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ConfirmationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProviderUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReservedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeSlot")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientUserId");

                    b.HasIndex("ProviderUserId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("Services.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Brandon"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Lora"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Zach"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Colette"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Noah"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Sharla"
                        });
                });

            modelBuilder.Entity("Services.Models.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Role = 3,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Role = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Role = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            Role = 1,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            Role = 1,
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            Role = 2,
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            Role = 1,
                            UserId = 6
                        });
                });

            modelBuilder.Entity("Services.Models.ApiKey", b =>
                {
                    b.HasOne("Services.Models.User", "CreatedByUser")
                        .WithMany("ApiKeys")
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("Services.Models.Appointment", b =>
                {
                    b.HasOne("Services.Models.User", "Client")
                        .WithMany("ClientAppointments")
                        .HasForeignKey("ClientUserId")
                        .OnDelete(DeleteBehavior.ClientNoAction);

                    b.HasOne("Services.Models.User", "Provider")
                        .WithMany("ProviderAppointments")
                        .HasForeignKey("ProviderUserId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("Services.Models.UserRole", b =>
                {
                    b.HasOne("Services.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Services.Models.User", b =>
                {
                    b.Navigation("ApiKeys");

                    b.Navigation("ClientAppointments");

                    b.Navigation("ProviderAppointments");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
